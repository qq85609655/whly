<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hailian.whly.frontnotification.dao.FrontNotificationDao">
    
	<sql id="frontNotificationColumns">
		a.id AS "id",
		a.category_type AS "categoryType",
		a.title AS "title",
		a.content AS "content",
		a.color AS "color",
		a.image AS "image",
		a.keywords AS "keywords",
		a.description AS "description",
		a.weight AS "weight",
		a.hits AS "hits",
		a.create_name AS "createName",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="frontNotificationJoins">
	</sql>
    
    <select id="getfrontNotification" resultType="com.hailian.whly.frontnotification.entity.FrontNotification" parameterType="com.hailian.whly.frontnotification.entity.FrontNotification">
		SELECT 
			<include refid="frontNotificationColumns"/>
		FROM front_notification a
			<include refid="frontNotificationJoins"/>
		<where>
			a.del_flag = 0
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="categoryType != null and categoryType != ''">
				AND a.category_type = #{categoryType}
			</if>
			
		</where>
		ORDER BY a.weight, a.update_date DESC
	</select>
    
	<select id="get" resultType="com.hailian.whly.frontnotification.entity.FrontNotification">
		SELECT 
			<include refid="frontNotificationColumns"/>
		FROM front_notification a
		<include refid="frontNotificationJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.hailian.whly.frontnotification.entity.FrontNotification">
		SELECT 
			<include refid="frontNotificationColumns"/>
		FROM front_notification a
		<include refid="frontNotificationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="categoryType != null and categoryType != ''">
				AND a.category_type = #{categoryType}
			</if>
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
			<if test="createName != null and createName != ''">
				AND a.create_name like CONCAT(CONCAT('%', #{createName}), '%')
			</if>
			<if test="createDate != null and createDate != ''">
				AND date_format(a.create_date, '%Y/%m%d') =  date_format(#{createDate}, '%Y/%m%d') 
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY a.weight, ${page.orderBy} 
			</when>
			<otherwise>
				ORDER BY a.weight, a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.hailian.whly.frontnotification.entity.FrontNotification">
		SELECT 
			<include refid="frontNotificationColumns"/>
		FROM front_notification a
		<include refid="frontNotificationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.weight, a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO front_notification(
			id,
			category_type,
			title,
			content,
			color,
			image,
			keywords,
			description,
			weight,
			hits,
			create_name,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{categoryType},
			#{title},
			#{content},
			#{color},
			#{image},
			#{keywords},
			#{description},
			#{weight},
			#{hits},
			#{createName},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE front_notification SET 	
			category_type = #{categoryType},
			title = #{title},
			content = #{content},
			color = #{color},
			image = #{image},
			keywords = #{keywords},
			description = #{description},
			weight = #{weight},
			hits = #{hits},
			create_name = #{createName},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE front_notification SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>